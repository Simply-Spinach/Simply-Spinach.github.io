/* navbar design */
/* CSS for responsive menu demo copied and pasted from example.  Edited to try and make work */

/* define variables */
:root {
    --nav-height: 3rem;
    --nav-bkgd-color: maroon;
    --nav-text-color: whitesmoke;
    --nav-hover-bkgd-color: whitesmoke;
    --nav-hover-text-color: black;
}

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: var(--nav-height) 0 0 0;
}

nav {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--nav-height);
    background-color: var(--nav-bkgd-color);
}

#navBurger {
    position: relative;
    display: block;
    font-size: 2rem;
    color: var(--nav-text-color);
    padding: 0.1em 0 0 0.3em;
    max-height: 2rem;
}

nav ul {
    position: relative;
    background-color: var(--nav-bkgd-color);
    list-style: none;
    margin: 0;
    padding: 0;
}

nav>ul {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s;
}

nav.clicked>ul {
    max-height: 90vh;
}

nav>ul>li {
    position: relative;
    background-color: var(--nav-bkgd-color);
    display: block;
    margin: 1rem;
}

nav>ul>li>a {
    display: block;
    width: 100%;
    height: 100%;
    padding: 0.5rem;
}

nav>ul>li>a::after {
    position: absolute;
    content: "âŒ„";
    right: 0.3rem;
    top: 0.2rem;
    color: inherit;
    font-size: 110%;
}

nav>ul>li>ul {
    margin: 0 0 0 1rem;
    background-color: inherit;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s;
}

nav>ul>li.clicked>ul {
    max-height: 90vh;
}

nav>ul>li>ul>li {
    padding: 0.5rem 0 0.5rem 0.5rem;
}

nav a {
    text-decoration: none;
    color: var(--nav-text-color);
}

nav>ul>li>ul>li:hover {
    background-color: var(--nav-hover-bkgd-color);
}

nav>ul>li>ul>li:hover a {
    color: var(--nav-hover-text-color);
}


/* ----- MEDIA QUERY for landscape/desktop layout ----- */
@media screen and (orientation: landscape) {

    #navBurger {
        display: none;
    }

    nav>ul {
        overflow: visible;
    }

    nav>ul>li {
        float: left;
        margin: 0.5rem;
    }

    nav>ul>li a {
        padding-right: 0.5rem;
        margin: 0;
    }

    nav>ul>li>ul {
        margin: 0 0.5rem 0.5rem 0;
        visibility: hidden;
        position: absolute;
    }

    nav>ul>li.clicked>ul {
        display: block;
        visibility: visible;
    }

    nav>ul>li>ul li {
        margin: 0;
        white-space: nowrap;
    }

    nav>ul>li>a::after {
        content: "";
    }

}

/* general website design */

main
{
    background-color: oldlace;
    /*I just want some margin added */
    padding: 0 5% 0 5%;
    margin: 0;
}

.image
{
    background-color:lightgray;
    align-content: center;
    min-height: 360px;
    min-width: 580px;
    border: 2px;
    border-color: black;
    color:black;
}

/* Main title section */
.title_block
{
    /*styling*/
    background-color: maroon;
    color: whitesmoke;
    border-style: dotted;
    border-width: medium;
    padding: 1rem;
    
    /*grid setup*/
    width: 100vw;
    display: grid;
    grid-template-columns:50% 50%;
    grid-template-rows:auto auto;
    grid-template-areas:
        'title  img'
        'body  img'
    ;
}

/*General main styling (rest are basically done for arrangement first and foremost*/
main h2
{
    color: maroon;
}


.title_block > h1
{
    grid-area: title;
}

.title_block > .body
{
    grid-area: body;
}

.title_block > .image
{
    grid-area: img;
}

/* Cook time counter */
.time_sum
{
    width: 100%;
    display: grid;
    grid-template-columns: 3;
    grid-template-areas:
        'h h h'
        'prep cook total'
} 

.time_sum > #prep_time
{
    grid-area: prep;
}

.time_sum > #prep_time::before
{
    content: 'Prep: ';
    font-weight:bold;
    color: maroon;
}

.time_sum > #cook_time
{
    grid-area: cook;
    margin: 0em 1em 0em 1em;
}

.time_sum > #cook_time::before
{
    content: 'Cook: ';
    font-weight:bold;
    color: maroon;
}


.time_sum > #total_time
{
    grid-area: total;
}

.time_sum > #total_time::before
{
    content: 'Total: ';
    font-weight:bold;
    color: maroon;
}

.time_sum > h2
{
    grid-area: h;
}

/*Ingredient list*/

.ingredients > h2
{

}

.ingredients > ol
{
    display: flexbox;
    flex-direction: column;
    column-count: 3;
    flex-wrap: wrap;
    align-items: flex-start;
    
}

.ingredients > ol > li
{

}

/* Step class is used for individual steps of recipe */

.step
{
    /*setup*/
    display: grid;
    grid-template-columns: calc( 100% / 6 ) calc( 500% / 6);
    grid-template-areas:
        'h cont';
    margin: 10% 0 10% 0;
}

.step > h2
{
    content: '';
    grid-area: h;
    
    margin-right: 1rem;
}

.step > .content
{
    grid-area: cont;
}

/* Step class is used for individual steps of recipe with images */

.step_w_img
{
    /*setup*/
    display: grid;
    grid-template-columns: calc( 100% / 6 ) calc( 200% / 6) 50%;
    grid-template-areas:
        'h cont img';
    margin: 10% 0 10% 0;
}

.step_w_img > h2
{
    content: '';
    grid-area: h;
    margin-right: 1rem;

}

.step_w_img > .content
{
    grid-area: cont;
}

.step_w_img > .img
{
    grid-area: img;
}


/* Result is for the final result of the process */

.result
{
    display: grid;
    grid-template-columns: calc( 100% / 6) calc( 400% / 6 ); /* last little bit should be a little margin about 1/6 of space available */
    grid-template-areas:
        'h img'
        'h cont'
    ;
}

.result > h2
{
    grid-area:h;
    margin-right: 1rem;

}

.result > .content
{
    grid-area: cont;
}

.result > .image
{
    grid-area: img;
}

@media screen and (aspect-ratio < 1/1 ) and (max-width: 800px)/*aka checking if vertical or phone layout should be used*/
{
    .title_block
    {
        grid-template-columns: 100%;
        grid-template-rows: auto auto auto;
        grid-template-areas:
            'title'
            'img'
            'body'
        ;
    }

    .ingredients ol
    {
        /*just trying to make it a bit easier to read on a small screen*/
        column-count: 2;
    }

    .step
    {
        grid-template-columns: 50% 50%;
        grid-template-rows: auto auto;
        grid-template-areas:
            'h    img'
            'cont img'
        ;
    }

    .result
    {
        grid-template-columns: auto auto auto;
        grid-template-rows: auto;
        grid-template-areas:
            'h'
            'img'
            'cont'
        ;
    }


}